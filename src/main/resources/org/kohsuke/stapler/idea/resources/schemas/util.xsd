<?xml version="1.0" encoding="UTF-8"?><xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="jelly:util" elementFormDefault="qualified">

  <xsd:annotation>
    <xsd:documentation>

      <p>A number of utility tags such as for tokenizing Strings.
      </p>

    </xsd:documentation>
  </xsd:annotation>

  <xsd:element name="tokenize">
    <xsd:annotation>
      <xsd:documentation/>
    </xsd:annotation>
    <xsd:complexType mixed="true">
      <xsd:sequence>
        <xsd:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="var">
        <xsd:annotation>
          <xsd:documentation>The variable name to hold the list of tokens</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="delim">
        <xsd:annotation>
          <xsd:documentation>the delimiter that separates the tokens</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="trim">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="escapeText">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="sort">
    <xsd:annotation>
      <xsd:documentation/>
    </xsd:annotation>
    <xsd:complexType mixed="true">
      <xsd:sequence>
        <xsd:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="items">
        <xsd:annotation>
          <xsd:documentation>Set the items to be sorted</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="var">
        <xsd:annotation>
          <xsd:documentation>The variable to hold the sorted collection.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="property">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="trim">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="escapeText">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="sleep">
    <xsd:annotation>
      <xsd:documentation>A tag which sleeps for a given amount of time.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType mixed="true">
      <xsd:sequence>
        <xsd:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="millis">
        <xsd:annotation>
          <xsd:documentation>Sets the amount of time that this thread should sleep for in milliseconds.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="trim">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="escapeText">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="replace">
    <xsd:annotation>
      <xsd:documentation>A tag that replaces occurrences of a character or string in its body or
        (or value) and places the result into the context</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType mixed="true">
      <xsd:sequence>
        <xsd:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="newChar">
        <xsd:annotation>
          <xsd:documentation>Sets the newChar.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="oldChar">
        <xsd:annotation>
          <xsd:documentation>Sets the oldChar.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="new">
        <xsd:annotation>
          <xsd:documentation>Sets the newString.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="old">
        <xsd:annotation>
          <xsd:documentation>Sets the oldString.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="value">
        <xsd:annotation>
          <xsd:documentation>Sets the value.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="var">
        <xsd:annotation>
          <xsd:documentation>Sets the var.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="trim">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="escapeText">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="properties">
    <xsd:annotation>
      <xsd:documentation>A tag which loads a properties file from a given file name or URI
        which are loaded into the current context.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType mixed="true">
      <xsd:sequence>
        <xsd:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="file">
        <xsd:annotation>
          <xsd:documentation>Sets the file name to be used to load the properties file.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="uri">
        <xsd:annotation>
          <xsd:documentation>Sets the URI of the properties file to use. This can be a full URL or a relative URI
            or an absolute URI to the root context of this JellyContext.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="var">
        <xsd:annotation>
          <xsd:documentation>If this is defined then a Properties object containing all the
            properties will be created and exported, otherwise the current variable
            scope will be set to the value of the properties.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="trim">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="escapeText">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="loadText">
    <xsd:annotation>
      <xsd:documentation>A tag which loads text from a file or URI into a Jelly variable.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType mixed="true">
      <xsd:sequence>
        <xsd:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="var">
        <xsd:annotation>
          <xsd:documentation>Sets the name of the variable which will be exported with the text value of the
            given file.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="file">
        <xsd:annotation>
          <xsd:documentation>Sets the file to be parsed as text</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="encoding">
        <xsd:annotation>
          <xsd:documentation>Sets the encoding to use to read the file</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="uri">
        <xsd:annotation>
          <xsd:documentation>Sets the uri to be parsed as text.
            This can be an absolute URL or a relative or absolute URI
            from this Jelly script or the root context.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="trim">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="escapeText">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="file">
    <xsd:annotation>
      <xsd:documentation>A tag which creates a java.io.File from a given name.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType mixed="true">
      <xsd:sequence>
        <xsd:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="name">
        <xsd:annotation>
          <xsd:documentation>Name of the file to be placed into the context</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="var">
        <xsd:annotation>
          <xsd:documentation>Name of the variable to contain the file</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="trim">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="escapeText">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="available">
    <xsd:annotation>
      <xsd:documentation>A tag which evaluates its body if the given file is available.
        The file can be specified via a File object or via a relative or absolute
        URI from the current Jelly script.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType mixed="true">
      <xsd:sequence>
        <xsd:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="file">
        <xsd:annotation>
          <xsd:documentation>Sets the file to use to test whether it exists or not.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="uri">
        <xsd:annotation>
          <xsd:documentation>Sets the URI to use to test for availability.
            The URI can be a full file based URL or a relative URI
            or an absolute URI from the root context.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="trim">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="escapeText">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>

</xsd:schema>
